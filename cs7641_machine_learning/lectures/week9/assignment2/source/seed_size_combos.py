algos_sps = \
{'Random Hill Climbing': {'rhc_combo1': {'seed': 1,
                                         'lengthFP': 25,
                                         'lengthFF': 25,
                                         'max_item_countKS': 30},
                          'rhc_combo2': {'seed': 1,
                                         'lengthFP': 50,
                                         'lengthFF': 50,
                                         'max_item_countKS': 60},
                          'rhc_combo3': {'seed': 1,
                                         'lengthFP': 75,
                                         'lengthFF': 75,
                                         'max_item_countKS': 90},
                          'rhc_combo4': {'seed': 2,
                                         'lengthFP': 25,
                                         'lengthFF': 25,
                                         'max_item_countKS': 30},
                          'rhc_combo5': {'seed': 2,
                                         'lengthFP': 50,
                                         'lengthFF': 50,
                                         'max_item_countKS': 60},
                          'rhc_combo6': {'seed': 2,
                                         'lengthFP': 75,
                                         'lengthFF': 75,
                                         'max_item_countKS': 90},
                          'rhc_combo7': {'seed': 3,
                                         'lengthFP': 25,
                                         'lengthFF': 25,
                                         'max_item_countKS': 30},
                          'rhc_combo8': {'seed': 3,
                                         'lengthFP': 50,
                                         'lengthFF': 50,
                                         'max_item_countKS': 60},
                          'rhc_combo9': {'seed': 3,
                                         'lengthFP': 75,
                                         'lengthFF': 75,
                                         'max_item_countKS': 90}},
 'Simulated Annealing': {'sa_combo1': {'seed': 1,
                                        'lengthFP': 25,
                                        'lengthFF': 25,
                                        'max_item_countKS': 30},
                          'sa_combo2': {'seed': 1,
                                        'lengthFP': 50,
                                        'lengthFF': 50,
                                        'max_item_countKS': 60},
                          'sa_combo3': {'seed': 1,
                                        'lengthFP': 75,
                                        'lengthFF': 75,
                                        'max_item_countKS': 90},
                          'sa_combo4': {'seed': 2,
                                        'lengthFP': 25,
                                        'lengthFF': 25,
                                        'max_item_countKS': 30},
                          'sa_combo5': {'seed': 2,
                                        'lengthFP': 50,
                                        'lengthFF': 50,
                                        'max_item_countKS': 60},
                          'sa_combo6': {'seed': 2,
                                        'lengthFP': 75,
                                        'lengthFF': 75,
                                        'max_item_countKS': 90},
                          'sa_combo7': {'seed': 3,
                                        'lengthFP': 25,
                                        'lengthFF': 25,
                                        'max_item_countKS': 30},
                          'sa_combo8': {'seed': 3,
                                        'lengthFP': 50,
                                        'lengthFF': 50,
                                        'max_item_countKS': 60},
                          'sa_combo9': {'seed': 3,
                                        'lengthFP': 75,
                                        'lengthFF': 75,
                                        'max_item_countKS': 90}},
 'Genetic Algorithm': {'ga_combo1': {'seed': 1,
                                     'lengthFP': 25,
                                     'lengthFF': 25,
                                     'max_item_countKS': 30},
                       'ga_combo2': {'seed': 1,
                                     'lengthFP': 50,
                                     'lengthFF': 50,
                                     'max_item_countKS': 60},
                       'ga_combo3': {'seed': 1,
                                     'lengthFP': 75,
                                     'lengthFF': 75,
                                     'max_item_countKS': 90},
                       'ga_combo4': {'seed': 2,
                                     'lengthFP': 25,
                                     'lengthFF': 25,
                                     'max_item_countKS': 30},
                       'ga_combo5': {'seed': 2,
                                     'lengthFP': 50,
                                     'lengthFF': 50,
                                     'max_item_countKS': 60},
                       'ga_combo6': {'seed': 2,
                                     'lengthFP': 75,
                                     'lengthFF': 75,
                                     'max_item_countKS': 90},
                       'ga_combo7': {'seed': 3,
                                     'lengthFP': 25,
                                     'lengthFF': 25,
                                     'max_item_countKS': 30},
                       'ga_combo8': {'seed': 3,
                                     'lengthFP': 50,
                                     'lengthFF': 50,
                                     'max_item_countKS': 60},
                       'ga_combo9': {'seed': 3,
                                     'lengthFP': 75,
                                     'lengthFF': 75,
                                     'max_item_countKS': 90}},
 'MIMIC': {'mimic_combo1': {'seed': 1,
                          'lengthFP': 25,
                          'lengthFF': 25,
                          'max_item_countKS': 30},
           'mimic_combo2': {'seed': 1,
                          'lengthFP': 50,
                          'lengthFF': 50,
                          'max_item_countKS': 60},
           'mimic_combo3': {'seed': 1,
                          'lengthFP': 75,
                          'lengthFF': 75,
                          'max_item_countKS': 90},
           'mimic_combo4': {'seed': 2,
                          'lengthFP': 25,
                          'lengthFF': 25,
                          'max_item_countKS': 30},
           'mimic_combo5': {'seed': 2,
                          'lengthFP': 50,
                          'lengthFF': 50,
                          'max_item_countKS': 60},
           'mimic_combo6': {'seed': 2,
                          'lengthFP': 75,
                          'lengthFF': 75,
                          'max_item_countKS': 90},
           'mimic_combo7': {'seed': 3,
                          'lengthFP': 25,
                          'lengthFF': 25,
                          'max_item_countKS': 30},
           'mimic_combo8': {'seed': 3,
                          'lengthFP': 50,
                          'lengthFF': 50,
                          'max_item_countKS': 60},
           'mimic_combo9': {'seed': 3,
                          'lengthFP': 75,
                          'lengthFF': 75,
                          'max_item_countKS': 90}}}


def main():
    import numpy as np
    for algo, combos in algos_sps.items():
        for combo, seed_size in combos.items():
            seed_size_keys = list(seed_size)
            seed = seed_size[seed_size_keys[0]]
            lengthFP =seed_size[seed_size_keys[1]]
            lengthFF = seed_size[seed_size_keys[2]]
            max_item_countKS = seed_size[seed_size_keys[3]]

            print(seed)
            print(lengthFP)
            print(lengthFF)
            print(max_item_countKS)
            
if __name__ == "__main__":
    main()